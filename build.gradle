/*
 * Copyright (c) 2018, The Modern Way. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(group: 'org.ajoberstar', name: 'grgit', version: '1.7.2')
        classpath(group: 'commons-codec', name: 'commons-codec', version: '1.11')
        classpath(group: 'commons-logging', name: 'commons-logging', version: '1.2')
        classpath(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5')
        classpath(group: 'org.owasp', name: 'dependency-check-gradle', version: '3.2.0')
        classpath(group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.6.2')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens
import java.net.InetAddress
import org.ajoberstar.grgit.Grgit

apply plugin: 'pmd'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'org.sonarqube'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

targetCompatibility = 1.8

version = '2.2.6-RELEASE'

group = 'com.themodernway'

eclipse { classpath { downloadJavadoc = true } }

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

repositories {
	mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.session:spring-session-data-redis')
    compile(group: 'com.themodernway', name: 'themodernway-server-sql', version: '2.2.6-RELEASE')
    compile(group: 'com.themodernway', name: 'themodernway-server-mongodb', version: '2.2.6-RELEASE')
    compile(group: 'org.postgresql', name: 'postgresql', version: '42.2.2')
    compile(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.5')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
}
