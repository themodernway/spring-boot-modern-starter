<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/*
 * Copyright (c) 2018, The Modern Way. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jdbc
						http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/cache
						http://www.springframework.org/schema/cache/spring-cache.xsd">
						
	<import resource="classpath:/com/themodernway/server/sql/config/SQLApplicationContext.xml" />
	
	<import resource="classpath:/com/themodernway/server/mongodb/config/MongoDBApplicationContext.xml" />
		
	<import resource="classpath:/com/themodernway/server/core/config/CoreApplicationContext.xml" />

	<bean id="BootstrapStringCryptoProvider" class="com.themodernway.server.core.security.BootstrapStringCryptoProvider">
		<constructor-arg>
			<value>file:/opt/development/properties/gateway/crypto.properties</value>
		</constructor-arg>
	</bean>

	<bean id="PropertiesProvider" class="com.themodernway.server.core.support.spring.CoreEncryptedPropertiesProviderPlaceholderConfigurer">
		<constructor-arg ref="BootstrapStringCryptoProvider" />
		<constructor-arg value="0xCAFEBABE;" />
		<property name="locations">
			<list>
				<value>file:/opt/development/properties/gateway/webapp.properties</value>
			</list>
		</property>
	</bean>

	<bean id="ScriptingProvider" class="com.themodernway.server.core.scripting.ScriptingProvider" destroy-method="close" lazy-init="true">
		<constructor-arg>
			<list>
				<bean class="com.themodernway.server.core.scripting.GroovyScriptingProperties" />
				<bean class="com.themodernway.server.core.scripting.JavaScriptScriptingProperties" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="Gateway_MongoDB" class="com.themodernway.server.mongodb.support.spring.MongoDBDescriptor" destroy-method="close" lazy-init="true" />
	
	<bean id="Gateway_HikariConfig" class="com.zaxxer.hikari.HikariConfig" lazy-init="true">
		<property name="poolName" value="Gateway_SpringHikariCP" />
		<property name="dataSourceClassName" value="org.postgresql.ds.PGSimpleDataSource" />
		<property name="maximumPoolSize" value="12" />
		<property name="idleTimeout" value="30000" />
		<property name="registerMbeans" value="false" />
		<property name="dataSourceProperties">
			<props>
				<prop key="url">${gateway.postgres.jdbc}</prop>
				<prop key="user">${gateway.postgres.user}</prop>
				<prop key="password">${gateway.postgres.pass}</prop>
			</props>
		</property>
	</bean>

	<bean id="Gateway_SQLPooledDS" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close" lazy-init="true">
		<constructor-arg ref="Gateway_HikariConfig" />
	</bean>
	
	<bean id="Gateway_SQLDescriptor" class="com.themodernway.server.sql.support.spring.GSQLDescriptor" destroy-method="close" lazy-init="true">
		<constructor-arg ref="Gateway_SQLPooledDS" />
    	<property name="description" value="API PostgreSQL DataBase" />
    </bean>
    
    <bean id="ContentSimpleFileItemStorage" class="com.themodernway.server.core.file.vfs.simple.SimpleFileItemStorage" lazy-init="true">
		<constructor-arg value="content" />
		<constructor-arg value="/opt/content" />
	</bean>
	
</beans>